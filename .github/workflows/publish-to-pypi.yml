name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  build-and-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Extract version from tag
      run: |
        # Extract version from git tag (remove 'v' prefix if present)
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Extracted version: $VERSION"
        
    - name: Update version in pyproject.toml
      run: |
        # Update version in pyproject.toml to match the tag
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml
        echo "Updated pyproject.toml version to: $VERSION"
        
    - name: Update version in __init__.py
      run: |
        # Update version in dtop/__init__.py to match the tag
        sed -i "s/__version__ = \".*\"/__version__ = \"$VERSION\"/" dtop/__init__.py
        echo "Updated __init__.py version to: $VERSION"
        
    - name: Verify version consistency
      run: |
        echo "=== Version Verification ==="
        echo "Git tag: $GITHUB_REF"
        echo "Extracted version: $VERSION"
        echo "pyproject.toml version:"
        grep 'version = ' pyproject.toml
        echo "__init__.py version:"
        grep '__version__ = ' dtop/__init__.py
        
    - name: Build package
      run: |
        python -m build
        echo "=== Built packages ==="
        ls -la dist/
        
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true