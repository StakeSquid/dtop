name: Test Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags-ignore: ['**']  # Don't run on tags (releases handle that)

jobs:
  test-build:
    name: Test package build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: |
        python -m build
        echo "=== Built packages ==="
        ls -la dist/
        
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Test installation
      run: |
        pip install dist/*.whl
        which dtop
        echo "âœ… Package builds and installs successfully"

  test-on-testpypi:
    name: Test publish to TestPyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: test-release
    permissions:
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Create test version
      run: |
        # Create a test version with timestamp to avoid conflicts
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        CURRENT_VERSION=$(grep 'version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        TEST_VERSION="${CURRENT_VERSION}.dev${TIMESTAMP}"
        sed -i "s/version = \".*\"/version = \"$TEST_VERSION\"/" pyproject.toml
        sed -i "s/__version__ = \".*\"/__version__ = \"$TEST_VERSION\"/" dtop/__init__.py
        echo "Created test version: $TEST_VERSION"
        
    - name: Build package
      run: python -m build
        
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        print-hash: true